extends ../../layouts/default.pug

block main
  .container.py-5
    a(href="/cart/order")
      h1.mb-4 Đơn hàng của bạn 

    h1.mb-4 Giỏ hàng
    
    if products && products.length
      form#cartForm.needs-validation(action="/cart/buy", method="post", novalidate)
        .card.mb-4
          .card-header.bg-light
            h5.mb-0 Sản phẩm (#{products.length})
          .card-body
            each item, index in products
              .row.py-3.align-items-center(class=index < products.length-1 ? "border-bottom" : "")
                .col-md-1
                  .form-check
                    input.form-check-input(type="checkbox", name="selectedItems", value=item.slug, id=`item-${index}`)
                .col-md-3
                  img.img-fluid(src=item.thumbnail || "https://via.placeholder.com/100", alt=item.title)
                .col-md-4
                  label.form-check-label.h6(for=`item-${index}`) #{item.title}
                  if item.price
                    p.text-danger.font-weight-bold #{new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(item.price)}
                .col-md-2
                  .input-group
                    .input-group-prepend
                      button.btn.btn-outline-secondary(type="button", onclick=`decrementQuantity('quantity-${index}')`) - 
                    input.form-control.text-center(type="number", name=`quantities[${item.slug}]`, id=`quantity-${index}`, min="1", value=item.quantity || 1)
                    .input-group-append
                      button.btn.btn-outline-secondary(type="button", onclick=`incrementQuantity('quantity-${index}')`) +
                .col-md-2
                  button.btn.btn-sm.btn-outline-danger.mt-2(type="button", onclick=`removeFromCart('${item.slug}')`)
                    i.fa.fa-trash.mr-1
                    | Xóa
            
        .row.mb-4
          .col-md-6
            .card
              .card-header.bg-light
                h5.mb-0 Phương thức thanh toán
              .card-body
                .form-check.mb-3
                  input.form-check-input#payment-cod(type="radio", name="paymentMethod", value="cod", checked)
                  label.form-check-label(for="payment-cod") Thanh toán khi nhận hàng (COD)
                .form-check
                  input.form-check-input#payment-bank(type="radio", name="paymentMethod", value="bank")
                  label.form-check-label(for="payment-bank") Chuyển khoản ngân hàng
            
          .col-md-6
            .card
              .card-header.bg-light
                h5.mb-0 Tổng cộng
              .card-body
                .d-flex.justify-content-between.mb-2
                  span Tạm tính:
                  span#subtotal 0 ₫
                .d-flex.justify-content-between.mb-2
                  span Phí vận chuyển:
                  span#shipping 30,000 ₫
                .d-flex.justify-content-between.font-weight-bold
                  span Tổng thanh toán:
                  span#total.text-danger 0 ₫
                button.btn.btn-primary.btn-block.mt-3(type="button", onclick="validateAndOpenPopup()")
                  i.fa.fa-shopping-cart.mr-2
                  | Tiến hành đặt hàng
        
        // Overlay và popup
        #overlay.d-none
        #checkoutModal.d-none.modal-container
          .checkout-modal
            .modal-header
              h4.mb-0 Thông tin giao hàng
              button.close-btn(type="button", onclick="closePopup()") ×
            
            .checkout-progress
              .progress-step.active
                .step-number 1
                .step-label Thông tin
              .progress-connector
              .progress-step
                .step-number 2
                .step-label Xác nhận
              .progress-connector
              .progress-step
                .step-number 3
                .step-label Hoàn tất
            
            .modal-body
              // Tab thông tin giao hàng
              #shipping-tab.checkout-tab.active
                .form-group
                  label(for="popup-name") Họ và tên
                  input#popup-name.form-control(type="text", required)
                  .invalid-feedback Vui lòng nhập họ tên
                
                .form-row
                  .form-group.col-md-6
                    label(for="popup-phone") Số điện thoại
                    .input-group
                      .input-group-prepend
                        span.input-group-text
                          i.fa.fa-phone
                      input#popup-phone.form-control(type="tel", required, pattern="[0-9]{10}")
                      .invalid-feedback Vui lòng nhập số điện thoại hợp lệ (10 số)
                  
                  .form-group.col-md-6
                    label(for="popup-email") Email (không bắt buộc)
                    .input-group
                      .input-group-prepend
                        span.input-group-text
                          i.fa.fa-envelope
                      input#popup-email.form-control(type="email")
                
                .form-group
                  label(for="popup-address") Địa chỉ giao hàng
                  textarea#popup-address.form-control(rows="3", required)
                  .invalid-feedback Vui lòng nhập địa chỉ giao hàng
                
                .form-group
                  label(for="popup-note") Ghi chú đơn hàng (không bắt buộc)
                  textarea#popup-note.form-control(rows="2", placeholder="Ví dụ: Thời gian giao hàng, hướng dẫn giao hàng...")
                
                .form-check.mb-3.border-top.pt-3.mt-3
                  input#save-info.form-check-input(type="checkbox", checked) 
                  label.form-check-label(for="save-info") Lưu thông tin cho lần mua hàng sau
              
              // Tab xác nhận
              #confirm-tab.checkout-tab
                .order-summary
                  h5.mb-3 Đơn hàng của bạn
                  #selected-products.mb-4
                    // Sản phẩm đã chọn sẽ được render ở đây
                  
                  .order-totals
                    .d-flex.justify-content-between.mb-2
                      span Tạm tính:
                      span#confirm-subtotal 0 ₫
                    .d-flex.justify-content-between.mb-2
                      span Phí vận chuyển:
                      span#confirm-shipping 0 ₫
                    .d-flex.justify-content-between.font-weight-bold.border-top.pt-2.mt-2
                      span Tổng thanh toán:
                      span#confirm-total.text-danger 0 ₫
                
                .payment-method-summary.mt-4
                  h5.mb-3 Phương thức thanh toán
                  #payment-method-display
                    // Phương thức thanh toán đã chọn
                
                .shipping-info-summary.mt-4
                  h5.mb-3 Thông tin giao hàng
                  #customer-info-display
                    // Thông tin khách hàng
              
              // Tab hoàn tất
              #complete-tab.checkout-tab.text-center
                .success-icon
                  i.fa.fa-check-circle.fa-5x.text-success
                h4.mt-3.mb-3 Đặt hàng thành công!
                p.mb-4 Cảm ơn bạn đã đặt hàng. Chúng tôi sẽ liên hệ với bạn trong thời gian sớm nhất.
                p#order-code.font-weight-bold.mb-4 Mã đơn hàng: #DH12345
                a.btn.btn-outline-primary(href="/products")
                  i.fa.fa-shopping-cart.mr-2
                  | Tiếp tục mua sắm
            
            .modal-footer
              #shipping-buttons.step-buttons.active
                button.btn.btn-outline-secondary(type="button", onclick="closePopup()") Hủy
                button.btn.btn-primary(type="button", onclick="validateAndGoToConfirm()") 
                  | Tiếp tục
                  i.fa.fa-arrow-right.ml-2
              
              #confirm-buttons.step-buttons
                button.btn.btn-outline-secondary(type="button", onclick="backToShipping()")
                  i.fa.fa-arrow-left.mr-2
                  | Quay lại
                button.btn.btn-success(type="button", onclick="submitOrder()")
                  i.fa.fa-check.mr-2
                  | Xác nhận đặt hàng
              
              #complete-buttons.step-buttons
                button.btn.btn-primary(type="button", onclick="closePopup()")
                  i.fa.fa-home.mr-2
                  | Đóng
    else
      .text-center.py-5
        i.fa.fa-shopping-cart.fa-4x.text-muted.mb-3
        h3.text-muted Giỏ hàng của bạn đang trống
        p.mb-4 Hãy thêm sản phẩm vào giỏ hàng để tiến hành đặt hàng
        a.btn.btn-primary(href="/products")
          i.fa.fa-arrow-left.mr-2
          | Tiếp tục mua sắm

  style.
    .modal-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1050;
    }
    
    .checkout-modal {
      background: white;
      border-radius: 8px;
      width: 650px;
      max-width: 95%;
      max-height: 95vh;
      overflow-y: auto;
      box-shadow: 0 10px 25px rgba(0,0,0,0.2);
      animation: slideIn 0.3s ease-out;
    }
    
    @keyframes slideIn {
      from { transform: translateY(20px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    
    .modal-header {
      background: #4285f4;
      color: white;
      padding: 15px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-top-left-radius: 8px;
      border-top-right-radius: 8px;
    }
    
    .close-btn {
      background: transparent;
      border: none;
      color: white;
      font-size: 24px;
      cursor: pointer;
      padding: 0;
      line-height: 1;
    }
    
    .checkout-progress {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
      background: #f8f9fa;
    }
    
    .progress-step {
      display: flex;
      flex-direction: column;
      align-items: center;
      position: relative;
    }
    
    .step-number {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      background: #e9ecef;
      color: #6c757d;
      display: flex;
      justify-content: center;
      align-items: center;
      font-weight: bold;
      margin-bottom: 5px;
      transition: all 0.3s;
    }
    
    .progress-step.active .step-number {
      background: #4285f4;
      color: white;
    }
    
    .progress-step.completed .step-number {
      background: #28a745;
      color: white;
    }
    
    .step-label {
      font-size: 12px;
      color: #6c757d;
    }
    
    .progress-step.active .step-label {
      color: #4285f4;
      font-weight: bold;
    }
    
    .progress-connector {
      width: 60px;
      height: 2px;
      background: #e9ecef;
      margin: 0 10px;
      margin-bottom: 20px;
    }
    
    .modal-body {
      padding: 20px;
    }
    
    .modal-footer {
      padding: 15px 20px;
      border-top: 1px solid #e9ecef;
    }
    
    .checkout-tab {
      display: none;
    }
    
    .checkout-tab.active {
      display: block;
    }
    
    .step-buttons {
      display: none;
      width: 100%;
      justify-content: space-between;
    }
    
    .step-buttons.active {
      display: flex;
    }
    
    .success-icon {
      margin: 20px 0;
    }
    
    .order-summary, .payment-method-summary, .shipping-info-summary {
      background: #f8f9fa;
      border-radius: 4px;
      padding: 15px;
    }
    
    .order-item {
      margin-bottom: 10px;
      padding-bottom: 10px;
      border-bottom: 1px solid #e9ecef;
    }
    
    .order-item:last-child {
      border-bottom: none;
    }

  script.
    
    // Các biến để lưu trữ tổng tiền
    let subtotal = 0;
    const shippingFee = 30000;
    
    // Tính toán tổng tiền khi trang tải
    document.addEventListener('DOMContentLoaded', function() {
      calculateTotal();
      
      // Gắn sự kiện khi checkbox thay đổi
      const checkboxes = document.querySelectorAll('input[name="selectedItems"]');
      checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', calculateTotal);
      });
      
      // Gắn sự kiện khi số lượng thay đổi
      const quantityInputs = document.querySelectorAll('input[type="number"]');
      quantityInputs.forEach(input => {
        input.addEventListener('change', calculateTotal);
      });
      
      // Kiểm tra nếu có thông tin đã lưu
      loadSavedCustomerInfo();
    });
    
    // Tăng số lượng
    function incrementQuantity(id) {
      const input = document.getElementById(id);
      input.value = parseInt(input.value) + 1;
      input.dispatchEvent(new Event('change'));
    }
    
    // Giảm số lượng
    function decrementQuantity(id) {
      const input = document.getElementById(id);
      const newValue = parseInt(input.value) - 1;
      if (newValue >= 1) {
        input.value = newValue;
        input.dispatchEvent(new Event('change'));
      }
    }
    
    // Tính tổng tiền
    function calculateTotal() {
      subtotal = 0;
      const items = document.querySelectorAll('input[name="selectedItems"]');
      
      items.forEach((checkbox, index) => {
        if (checkbox.checked) {
          const quantityInput = document.getElementById(`quantity-${index}`);
          const quantity = parseInt(quantityInput.value);
          
          // Lấy giá từ phần tử HTML
          const priceText = checkbox.closest('.row').querySelector('.text-danger').innerText;
          const price = parseInt(priceText.replace(/[^\d]/g, ''));
          
          subtotal += price * quantity;
        }
      });
      
      const total = subtotal + shippingFee;
      
      // Cập nhật hiển thị
      document.getElementById('subtotal').innerText = formatCurrency(subtotal);
      document.getElementById('total').innerText = formatCurrency(total);
    }
    
    // Định dạng tiền tệ VND
    function formatCurrency(amount) {
      return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount)
        .replace(/\s₫/, ' ₫');
    }
    
    // Xác thực trước khi mở popup
    function validateAndOpenPopup() {
      const selectedItems = document.querySelectorAll('input[name="selectedItems"]:checked');
      
      if (selectedItems.length === 0) {
        Swal.fire({
          icon: 'warning',
          title: 'Giỏ hàng trống',
          text: 'Vui lòng chọn ít nhất một sản phẩm để tiến hành đặt hàng',
          confirmButtonColor: '#4285f4'
        });
        return;
      }
      
      openPopup();
    }
    
    // Mở popup
    function openPopup() {
      document.getElementById('overlay').className = 'position-fixed top-0 left-0 w-100 h-100 bg-dark';
      document.getElementById('overlay').style = 'opacity: 0.5; z-index: 1040;';
      
      // Reset về tab đầu tiên
      showTab('shipping');
      
      const modal = document.getElementById('checkoutModal');
      modal.className = 'modal-container';
    }
    
    // Đóng popup
    function closePopup() {
      document.getElementById('overlay').className = 'd-none';
      document.getElementById('checkoutModal').className = 'd-none';
    }
    
    // Chuyển giữa các tab
    function showTab(tabName) {
      // Ẩn tất cả tab và buttons
      document.querySelectorAll('.checkout-tab').forEach(tab => tab.classList.remove('active'));
      document.querySelectorAll('.step-buttons').forEach(btn => btn.classList.remove('active'));
      
      // Hiển thị tab được chọn
      document.getElementById(`${tabName}-tab`).classList.add('active');
      document.getElementById(`${tabName}-buttons`).classList.add('active');
      
      // Cập nhật trạng thái progress steps
      updateProgressSteps(tabName);
    }
    
    // Cập nhật hiển thị các bước tiến độ
    function updateProgressSteps(currentStep) {
      const steps = document.querySelectorAll('.progress-step');
      steps.forEach(step => step.classList.remove('active', 'completed'));
      
      if (currentStep === 'shipping') {
        steps[0].classList.add('active');
      } else if (currentStep === 'confirm') {
        steps[0].classList.add('completed');
        steps[1].classList.add('active');
      } else if (currentStep === 'complete') {
        steps[0].classList.add('completed');
        steps[1].classList.add('completed');
        steps[2].classList.add('active');
      }
    }
    
    // Xác thực và chuyển đến tab Xác nhận
    function validateAndGoToConfirm() {
      const name = document.getElementById('popup-name').value.trim();
      const phone = document.getElementById('popup-phone').value.trim();
      const address = document.getElementById('popup-address').value.trim();
      
      // Kiểm tra hợp lệ
      let valid = true;
      
      if (!name) {
        document.getElementById('popup-name').classList.add('is-invalid');
        valid = false;
      } else {
        document.getElementById('popup-name').classList.remove('is-invalid');
      }
      
      if (!phone || !/^\d{10}$/.test(phone)) {
        document.getElementById('popup-phone').classList.add('is-invalid');
        valid = false;
      } else {
        document.getElementById('popup-phone').classList.remove('is-invalid');
      }
      
      if (!address) {
        document.getElementById('popup-address').classList.add('is-invalid');
        valid = false;
      } else {
        document.getElementById('popup-address').classList.remove('is-invalid');
      }
      
      if (!valid) return;
      
      // Lưu thông tin nếu được chọn
      if (document.getElementById('save-info').checked) {
        saveCustomerInfo();
      }
      
      // Hiển thị thông tin sản phẩm đã chọn
      renderSelectedProducts();
      
      // Hiển thị thông tin thanh toán
      document.getElementById('confirm-subtotal').innerText = document.getElementById('subtotal').innerText;
      document.getElementById('confirm-shipping').innerText = document.getElementById('shipping').innerText;
      document.getElementById('confirm-total').innerText = document.getElementById('total').innerText;
      
      // Hiển thị phương thức thanh toán
      const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
      document.getElementById('payment-method-display').innerHTML = `
        <div class="card border-0 bg-light">
          <div class="card-body py-2">
            <i class="fa fa-${paymentMethod === 'cod' ? 'money' : 'bank'} mr-2"></i>
            ${paymentMethod === 'cod' ? 'Thanh toán khi nhận hàng (COD)' : 'Chuyển khoản ngân hàng'}
          </div>
        </div>
      `;
      
      // Hiển thị thông tin khách hàng
      const email = document.getElementById('popup-email').value.trim();
      const note = document.getElementById('popup-note').value.trim();
      
      document.getElementById('customer-info-display').innerHTML = `
        <div class="card border-0 bg-light">
          <div class="card-body py-2">
            <p class="mb-1"><strong>Họ tên:</strong> ${name}</p>
            <p class="mb-1"><strong>Số điện thoại:</strong> ${phone}</p>
            ${email ? `<p class="mb-1"><strong>Email:</strong> ${email}</p>` : ''}
            <p class="mb-1"><strong>Địa chỉ:</strong> ${address}</p>
            ${note ? `<p class="mb-1"><strong>Ghi chú:</strong> ${note}</p>` : ''}
          </div>
        </div>
      `;
      
      // Chuyển sang tab xác nhận
      showTab('confirm');
    }
    
    // Quay lại tab thông tin giao hàng
    function backToShipping() {
      showTab('shipping');
    }
    
    // Hiển thị sản phẩm đã chọn ở tab xác nhận
    function renderSelectedProducts() {
      const selectedItems = document.querySelectorAll('input[name="selectedItems"]:checked');
      let html = '';
      
      selectedItems.forEach((checkbox, index) => {
        const row = checkbox.closest('.row');
        const title = row.querySelector('.form-check-label').innerText;
        const price = row.querySelector('.text-danger').innerText;
        const quantityInput = document.getElementById(`quantity-${index}`);
        const quantity = parseInt(quantityInput.value);
        
        html += `
          <div class="order-item d-flex justify-content-between align-items-center">
            <div>
              <span class="font-weight-bold">${title}</span>
              <br>
              <span class="text-muted">SL: ${quantity}</span>
            </div>
            <span class="text-danger">${price}</span>
          </div>
        `;
      });
      
      document.getElementById('selected-products').innerHTML = html;
    }
    
    // Lưu thông tin khách hàng vào localStorage
    function saveCustomerInfo() {
      const customerInfo = {
        name: document.getElementById('popup-name').value.trim(),
        phone: document.getElementById('popup-phone').value.trim(),
        email: document.getElementById('popup-email').value.trim(),
        address: document.getElementById('popup-address').value.trim()
      };
      
      localStorage.setItem('customerInfo', JSON.stringify(customerInfo));
    }
    
    // Tải thông tin khách hàng từ localStorage
    function loadSavedCustomerInfo() {
      const savedInfo = localStorage.getItem('customerInfo');
      
      if (savedInfo) {
        const customerInfo = JSON.parse(savedInfo);
        
        document.getElementById('popup-name').value = customerInfo.name || '';
        document.getElementById('popup-phone').value = customerInfo.phone || '';
        document.getElementById('popup-email').value = customerInfo.email || '';
        document.getElementById('popup-address').value = customerInfo.address || '';
      }
    }
    
    // Gửi form đặt hàng
    function submitOrder() {
      const form = document.getElementById('cartForm');

      const hiddenFields = [
        { name: 'customerName', value: document.getElementById('popup-name').value.trim() },
        { name: 'customerPhone', value: document.getElementById('popup-phone').value.trim() },
        { name: 'customerEmail', value: document.getElementById('popup-email').value.trim() },
        { name: 'customerAddress', value: document.getElementById('popup-address').value.trim() },
        { name: 'customerNote', value: document.getElementById('popup-note').value.trim() }
      ];

      hiddenFields.forEach(({ name, value }) => {
        let input = document.querySelector(`input[name="${name}"]`);
        if (!input) {
          input = document.createElement('input');
          input.type = 'hidden';
          input.name = name;
          form.appendChild(input);
        }
        input.value = value;
      });

      // Tạo mã đơn hàng và hiển thị
      const orderCode = generateOrderCode();
      document.getElementById('order-code').innerText = `Mã đơn hàng: ${orderCode}`;
      showTab('complete');

      // Gửi thông tin qua fetch
      const formData = new FormData(form);
      formData.append('orderCode', orderCode); // ✅ thêm orderCode vào formData

      // Thêm subtotal vào form gửi
      const subtotalValue = document.getElementById('subtotal').innerText.replace(/[^\d]/g, '');
      formData.append('subtotal', subtotalValue);

      fetch('/cart/buy', {
        method: 'POST',
        body: formData
      }).then(response => {
        if (!response.ok) {
          throw new Error('Có lỗi xảy ra khi đặt hàng');
        }
        return response.json();
      }).catch(error => {
        console.error('Lỗi:', error);
      });
    }